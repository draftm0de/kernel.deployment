name: "Build Image Tags"
description: "Build Image Tags"
inputs:
  source:
    description: "source branch"
    required: true
  target:
    description: "branch to be merged into"
    required: true

outputs:
  tags:
    description: "tags to be use for image"
    value: ${{ steps.get-image-tags.outputs.tags }}

runs:
  using: "composite"
  steps:
    - name: "Convert target branch into version"
      shell: bash
      id: target
      uses: draftm0de/kernel.deployment/.github/actions/convert-branch-to-version@main
      with:
        branch: ${{ inputs.target }}

    - name: "Convert source branch into version"
      shell: bash
      id: source
      uses: draftm0de/kernel.deployment/.github/actions/convert-branch-to-version@main
      with:
        branch: ${{ inputs.source }}

    - name: "Validate source and target branch"
      shell: bash
      run: |
        echo "::notice::Validating source and target branches..."
        if [ -n "${{ steps.source.outputs.branch }}" ] && [ -n "${{ steps.target.outputs.branch }}" ] ; then
          echo "::notice::> source and target matches version patterns"
          if (( ${{ steps.source.outputs.major }} > ${{ steps.target.outputs.major }} )); then
            echo "::error::> source major version is greater than target major version"
            exit 1
          fi
          if [ "${{ steps.source.outputs.major }}" == "${{ steps.target.outputs.major }}" ]; then
            if (( ${{ steps.source.outputs.minor }} > ${{ steps.target.outputs.minor }} )); then
              echo "::error::> source major is greater than target major version"
              exit 1
            fi        
          fi 
          if [ -n "${{ steps.target.outputs.minor }}" ] && [ -z "${{ steps.source.outputs.minor }}" ]; then
            pattern="${{ steps.target.outputs.prefix }}${{ steps.target.outputs.major }}"
            if [ -n "${{ steps.target.outputs.minor }}" ]; then
              pattern="${pattern}.${{ steps.target.outputs.minor }}"
            fi
            echo "::notice::> search pattern: $pattern"
            latest_branch=$(git branch -r | grep -E "${pattern}" | sed 's|origin/||' | sort -Vr | head -n 1)
            if [ -n "$latest_branch" ]; then
              echo "::notice::> latest branch: $latest_branch"
            fi
          fi
        fi
        if [ -n "${{ steps.source.outputs.branch }}" ]; then
          echo "::notice::> use source branch"
        fi
        if [ -n "${{ steps.target.outputs.branch }}" ]; then
          echo "::notice::> use target branch"
        fi
        echo "::notice::source and target branches are validated."
