name: "Build Docker Image"
description: "Build Docker Image"
inputs:
  image:
    description: "Docker image without tag"
    required: true
  target:
    description: "Build --target option"
    required: false
  context:
    description: "Build context (default: .)"
    required: false
    default: "."
  reproducible:
    description: "Build reproducible image"
    required: false
  options:
    description: "Additional build options"
    required: false
  build_args_file:
    description: "--build-args from file"
    required: false
outputs:
  digest:
    description: "Docker built image digest"
    value: ${{ steps.build-image.outputs.digest }}


runs:
  using: "composite"
  steps:
    - name: "Prepare Build Arguments"
      id: arguments
      shell: bash
      run: |
        echo "::notice::Preparing build arguments..."
        build_options="${{ inputs.options }}"
        
        build_args_file="${{ inputs.context }}/${{ inputs.build_args_file }}"
        if [ -f "$build_args_file" ]; then
          echo "::notice::> build-args from file: $build_args_file"
          build_args=$(cat "$build_args_file" | awk -F "=" '{ print "--build-arg " $1"="$2;}' | xargs)
          build_options="$build_options $build_args"        
        fi    
               
        tag="${{ inputs.image }}:latest"
        echo "::notice::> tag: $tag"       
        build_options="$build_options --tag $tag"
        
        if [ -n "${{ inputs.target }}" ]; then
          echo "::notice::> target: ${{ inputs.target }}"
          build_options="$build_options --target ${{ inputs.target }}"
        fi     
        
        echo "::notice::> context: ${{ inputs.context }}"
        build_options="$build_options ${{ inputs.context }}"

        echo "::notice::Build arguments prepared."
        echo "build_options=$build_options" >> $GITHUB_OUTPUT        
        echo "image=$tag" >> $GITHUB_OUTPUT

    - name: "Set Up Docker Buildx for Reproducible Images"
      if: ${{ inputs.reproducible == 'true' }}
      uses: docker/setup-buildx-action@v3

    - name: "Build Image"
      shell: bash
      id: build-image
      run: |
        echo "::notice::Building docker image..."
        
        options="${{ steps.arguments.outputs.build_options }}"
        if [ ${{ inputs.reproducible }} == 'true' ]; then
          echo "::notice::> use docker buildx build"
          SOURCE_DATE_EPOCH=0 docker buildx build --no-cache --output type=docker,rewrite-timestamp=true $options
        else
          echo "::notice::> use docker build"
          docker build $options
        fi
        tag="${{ inputs.image }}:latest"
        digest=$(docker inspect --format="{{.Id}}" "$tag")
        echo "::notice::> digest: $digest"
        
        echo "::notice::Docker image built."
        echo "digest=$digest" >> $GITHUB_OUTPUT        
