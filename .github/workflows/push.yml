name: Tag and Push Docker Image

on:
  workflow_call:
    inputs:
      image:
        description: "docker image (name / file)"
        required: true
        type: string
      artifact:
        description: "artifact name"
        required: false
        type: string
      tag:
        description: "docker image tag"
        required: false
        type: string
    secrets:
      docker_username:
        description: "Docker Username"
        required: true
      docker_token:
        description: "Docker Token"
        required: true

jobs:
  push:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_PATH: "artifact"
    steps:
      - name: Download Docker Image From Artifacts
        uses: actions/download-artifact@v4
        if: ${{ inputs.artifact }}
        with:
          name: ${{ inputs.artifact }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Load Docker Image
        id: source
        run: |
          if [ -n "${{ inputs.artifact }}" ]; then
            file="${{ env.ARTIFACT_PATH }}/${{ inputs.image }}.tar"
            echo "::notice:: > load from: ${file}"               
            image_name=$(docker load --input ${file} | grep 'Loaded image:' | awk '{print $3}')
          fi
          
          echo "::notice:: > use (image): $image_name"       
          echo "image_name=$image_name" >> $GITHUB_OUTPUT

      - name: Set Target Image
        id: target
        run: |
          if [ -n "${{ inputs.tag }}" ]; then
            image_name="${{ inputs.image }}:${{ inputs.tag }}"
          else
            image_name="${{ inputs.image }}:${{ github.ref_name }}"
          fi 
          
          echo "::notice:: > use (image): $image_name"          
          echo "image_name=$image_name" >> $GITHUB_OUTPUT

      - name: Tag Docker Image
        run: |
          docker tag ${{ steps.source.outputs.image_name }} ${{ steps.target.outputs.image_name }}
          echo "::notice:: > Image tagged as ${{ steps.target.outputs.image_name }} successfully"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_token }}

#      - name: Docker Push Image
#        run: |
#          docker push ${{ steps.target.outputs.image_name }}
#          echo "::notice:: > Image pushed successfully"
