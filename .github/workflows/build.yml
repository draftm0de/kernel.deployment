name: Build Docker Image

on:
  workflow_call:
    inputs:
      image:
        description: "docker image name"
        required: true
        type: string
      build_context:
        description: "docker build context path (default: .)"
        required: false
        type: string
        default: .
      build_target:
        description: "docker build --target"
        required: false
        type: string
      build_args_file:
        description: "filename to be used for --build-args"
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use --driver-opt image=moby/buildkit:v0.13.1 --name buildkit_13_1       

      - name: Build Docker Image
        id: image-build
        run: |
          echo "::notice:: Build image..."
          
          image_tag="${{ inputs.image }}:${{ github.sha }}"
          echo "::notice::--tag: $image_tag"
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT 
          
          build_options="--tag $image_tag"
          if [ -n "${{ inputs.build_target }}" ]; then
              echo "::notice::--target: ${{ inputs.build_target }}"
              # leading space required, concatenation in docker build command
              build_options="$build_options --target ${{ inputs.build_target }}"            
          fi    
          
          build_args_file="${{ inputs.build_context }}/${{ inputs.build_args_file }}"

          if [ -f "$build_args_file" ]; then
            echo "::notice::--build-args: $build_args_file"
            build_args=$(cat "$build_args_file" | awk -F "=" '{ print "--build-arg " $1"="$2;}' | xargs)
            build_options="$build_options $build_args"            
          fi
          build_options="$build_options --build-arg SOURCE_DATE_EPOCH=0"
          docker build $build_options --no-cache ${{ inputs.build_context }}
          echo "::notice:: > build successfully"

      - name: Save Docker Image
        id: save-image
        uses: draftm0de/kernel.deployment/.github/actions/save-image@main
        with:
          image: ${{ inputs.image }}
