name: Build Docker Image

on:
  workflow_call:
    inputs:
      namespace:
        description: "image (Namespace)"
        required: true
        type: string      
      image:
        description: "image (Name)"
        required: true
        type: string      
      context:
        description: "docker build context (path)"
        required: false
        type: string
        default: .
      build_target:
        description: "docker build --target"
        required: false
        type: string
      build_args_file:
        description: "filename to be used for --build-args"
        required: false
        type: string
      artifact_name:
        description: "artifact name"
        required: false
        type: string          

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      built_name: ${{ steps.image-build.outputs.built_name }}
      built_file: ${{ steps.image-save.outputs.built_file }}
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        id: image-build
        run: |
          echo "::notice:: Build image..."
          if [ -d "${{ inputs.context }}" ]; then
            CONTEXT="${{ inputs.context }}"
          else
            CONTEXT="."
          fi
          
          IMAGE_TAG="latest"
          BUILD_TARGET="${{ inputs.build_target }}"
          if [ -n "${BUILD_TARGET}" ]; then
              echo "::notice::- build with --target: $BUILD_TARGET"
              IMAGE_TAG="${BUILD_TARGET}-${IMAGE_TAG}"
              # leading space required, concatination in docker build command
              BUILD_TARGET=" --target $BUILD_TARGET"            
          else 
            echo "::notice::- Build without --target"
          fi    
          
          IMAGE="${{ inputs.namespace }}/${{ inputs.image }}:${IMAGE_TAG}"
          BUILD_ARGS_FILE="${{ inputs.context }}/${{ inputs.build_args_file }}"
          if [ -f "$BUILD_ARGS_FILE" ]; then
            echo "::notice::- Build with --build-args: $BUILD_ARGS_FILE"
            BUILD_ARGS=$(cat "$BUILD_ARGS_FILE" | awk -F "=" '{ print "--build-arg " $1"="$2;}' | xargs)
            docker build --tag ${IMAGE}${BUILD_TARGET} $BUILD_ARGS ${{ inputs.context }}
          else
            echo "::notice::- Build without --build-args"
            docker build --tag ${IMAGE}${BUILD_TARGET} ${{ inputs.context }}
          fi

          echo "::notice:: > build successfully"
          echo "built_name=${IMAGE}" >> $GITHUB_OUTPUT

      - name: Save Docker Image
        id: image-save
        if: ${{ inputs.artifact_name }}
        run: |
          built_file="${{ inputs.image }}.tar"
          docker save -o ${built_file} ${{ steps.image-build.outputs.built_name }}
          echo "built_file=${built_file}" >> $GITHUB_OUTPUT
          
      - name: Upload Docker Image Artifact
        if: ${{ inputs.artifact_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ steps.image-save.outputs.built_file }}
          if-no-files-found: error
