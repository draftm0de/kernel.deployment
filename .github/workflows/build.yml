name: Build Docker Image

on:
  workflow_call:
    inputs:
      image_namespace:
        description: "Image (Namespace)"
        required: true
        type: string      
      image_name:
        description: "Image (Name)"
        required: true
        type: string
      image_tag:
        description: "Image (Tag)"
        required: true
        type: string
      build_context:
        description: "docker build context path (default: .)"
        required: false
        type: string
        default: .
      build_target:
        description: "docker build --target"
        required: false
        type: string
      build_args_file:
        description: "filename to be used for --build-args"
        required: false
        type: string
      artifact:
        description: "artifact name"
        required: false
        type: string          

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4
        
      - name: Build Docker Image
        id: image-build
        run: |
          echo "::notice:: Build image..."
           
          build_target="${{ inputs.build_target }}"
          if [ -n "${build_target}" ]; then
              echo "::notice::- build with --target: $BUILD_TARGET"
              # leading space required, concatenation in docker build command
              build_target=" --target $build_target"            
          else 
            echo "::notice::- Build without --target"
          fi    
          
          image="${{ inputs.image_namespace }}/${{ inputs.image_name }}:${{ inputs.image_tag }}"
          build_args_file="${{ inputs.build_context }}/${{ inputs.build_args_file }}"
          if [ -f "$build_args_file" ]; then
            echo "::notice::- Build with --build-args: $build_args_file"
            build_args=$(cat "$build_args_file" | awk -F "=" '{ print "--build-arg " $1"="$2;}' | xargs)
            docker build --tag ${image}${build_target} $build_args ${{ inputs.build_context }}
          else
            echo "::notice::- Build without --build-args"
            docker build --tag ${image}${build_target} ${{ inputs.build_context }}
          fi

          echo "::notice:: > build successfully"

      - name: Save Docker Image
        id: image-save
        if: ${{ inputs.artifact }}
        run: |
          image="${{ inputs.image_namespace }}/${{ inputs.image_name }}:${{ inputs.image_tag }}"
          built_image_file="${{ inputs.image_name }}-${{ inputs.image_tag }}.tar"
          docker save -o ${built_image_file} ${image}
          echo "built_image_file=${built_image_file}" >> $GITHUB_OUTPUT
          
      - name: Upload Docker Image Artifact
        if: ${{ inputs.artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          path: ${{ steps.image-save.outputs.built_image_file }}
          if-no-files-found: error
