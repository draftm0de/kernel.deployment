name: Tag Image and Commit

on:
  workflow_call:
    inputs:
      namespace:
        description: "docker namespace"
        required: true
        type: string
      image:
        description: "docker image (name / file)"
        required: true
        type: string    
      artifact:
        description: "artifact name"
        required: true
        type: string    
      tags:
        description: "Comma-separated list of tags to process"
        required: true
        type: string
    secrets:
      docker_token:
        description: "Docker Token"
        required: true        

jobs:
  preprocessing:
    env:
      ARTIFACT_PATH: "artifact"  
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.prepare.outputs.tags }}
      source: ${{ steps.source.outputs.image_name }}
    steps:
      - name: Convert Tags From Input
        id: prepare
        run: |
          echo "**notice** Converting Input.Tags to Array..."
          items="${{ inputs.tags }}"
          if [[ -z "$items" ]]; then
            echo "**Error** Input string is empty" >&2
            exit 1
          fi
          tags=$(echo "[\"${items//,/\",\"}\"]")
          echo "tags=$tags" >> $GITHUB_OUTPUT
          echo "**notice** > Input.Tags converted."
          
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Load Docker Image
        id: source
        run: |
          echo "::notice:: Loading Docker Image from artifact..."        
          file="${{ env.ARTIFACT_PATH }}/${{ inputs.image }}.tar"
          image_name=$(docker load --input ${file} | grep 'Loaded image:' | awk '{print $3}')        
          echo "image_name=$image_name" >> $GITHUB_OUTPUT
          echo "::notice:: > Docker Image loaded as $image_name"

  tag-and-push:
    needs: preprocessing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        item: ${{ fromJson(needs.preprocessing.outputs.tags) }}    
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"       
        
      - name: Tag Docker Image
        run: |
          echo "**notice** Tagging Docker Image..."
          target="${{ inputs.namespace }}/${{ inputs.image }}:${{ matrix.item }}"
          docker tag ${{ needs.preprocessing.outputs.source }} $target
          echo "**notice** > Docker image $source tagged with $target"
      
      - name: Tag Commit
        run: |
          echo "**notice** Tagging Commit..."
          if git ls-remote --heads origin ${{ matrix.item }} | grep -q ${{ matrix.item }}; then
            echo "**notice** > skipped, Tag ${{ matrix.item }} is a branch" 
          else
            echo "**notice** > Commit tagged with ${{ matrix.item }}"
          fi
            
      - name: Push Docker Image
        run: |
          echo "**notice** Pushing Docker Image"  
          target="${{ inputs.namespace }}/${{ inputs.image }}:${{ matrix.item }}"
          docker push $target
          echo "**notice** > Image pushed as $target"
