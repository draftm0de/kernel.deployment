name: Tag Image and Commit

on:
  workflow_call:
    inputs:
      tags:
        description: "Comma-separated list of tags to process"
        required: true
        type: string

jobs:
  preprocessing:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.prepare.outputs.tags }}
    steps:
      - name: Convert Tags From Input
        id: prepare
        run: |
          items="${{ inputs.tags }}"
          if [[ -z "$items" ]]; then
            echo "**Error** Input string is empty" >&2
            exit 1
          fi
          tags=$(echo "[\"${items//,/\",\"}\"]")
          echo "tags=$tags" >> $GITHUB_OUTPUT
          
      - name: Download Artifact
        run: |
          echo "**notice** download artifact..."
          echo "**notice** artifact downloaded."

      - name: Load Artifact
        run: |
          echo "**notice** load artifact..."
          echo "**notice** artifact loaded."

  tag-and-push:
    needs: preprocessing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        item: ${{ fromJson(needs.preprocessing.outputs.tags) }}    
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"       
        
      - name: Tag Docker Image
        run: |
          echo "**notice** Tagging Docker Image with ${{ matrix.item }}..."
          echo "**notice** Docker image tagged with ${{ matrix.item }}."
      
      - name: Tag Commit
        run: |
          if git ls-remote --heads origin ${{ matrix.item }} | grep -q ${{ matrix.item }}; then
            echo "**notice** Tag Commit skipped, Tag ${{ matrix.item }} is a branch" 
          else
            echo "**notice** Tag Commit with ${{ matrix.item }}"
          fi
            
      - name: Push Docker Image
        run: |
          echo "**notice** Push Docker Image with ${{ matrix.item }}"  
