name: Scan Docker Image

on:
  workflow_call:
    inputs:
      image:
        description: "image name"
        type: string
        required: true
      artifact:
        description: "artifact name"
        type: string
        required: false
      scanner:
        description: "scanner to be used"
        type: string
        required: true
      config:
        description: "scanner config file"
        type: string
        required: false
    secrets:
      DOCKER_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: "Load Docker Image From Artifact"
        id: load-image
        if: ${{ inputs.artifact }}
        uses: draftm0de/kernel.deployment/.github/actions/image-load@main
        with:
          image: ${{ inputs.image }}
          artifact: ${{ inputs.artifact }}

      - name: "Prepare Scan Arguments"
        id: arguments
        run: |
          echo "::notice:: Preparing Scan Arguments..."
          
          # set image name
          if [ -n "${{ steps.load-image.outputs.image }}" ]; then
            image="${{ steps.load-image.outputs.image }}"
          else
            image="${{ inputs.image }}"
          fi
                   
          # verify scanner                
          case "${{ inputs.scanner }}" in
            scout)
              echo "::notice:: > use scanner ${{ inputs.scanner }}"
              echo "docker-login-required=true" >> $GITHUB_OUTPUT
              if [[ "${{ inputs.image }}" == */* ]]; then
                image="${{ inputs.image }}"
                namespace="${image%%/*}"                                
              else
                echo "::error:: cannot extract any namespace from inputs.image"
                exit 1
              fi
              echo "::notice:: > namespace: $namespace"          
              echo "namespace=$namespace" >> $GITHUB_OUTPUT 
              ;;
            *)
              echo "::error:: given scanner ${{ inputs.scanner }} is not supported"
              exit 1
              ;;
          esac
          
          # verify config file
          if [ -n "${{ inputs.config }}" ]; then
            config="${{ inputs.config }}"
          else
            config=".${{ inputs.scanner }}.config"
          fi          
          if [ ! -f "${config}" ]; then
            echo "::error:: config file ${config} not found"
            exit 1
          fi
                    
          echo "::notice:: Scan arguments prepared."
          echo "image=$image" >> $GITHUB_OUTPUT
          echo "config=$config" >> $GITHUB_OUTPUT        

      - name: "Login To Docker Hub"
        if: ${{ steps.arguments.outputs.docker-login-required }}
        uses: docker/login-action@v3
        with:
          username: ${{ steps.arguments.outputs.namespace }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: "Scan Image With Docker Scout"
        if: ${{ inputs.scanner }} == "scout"
        uses: draftm0de/kernel.deployment/.github/actions/image-scan-scout@main
        with:
          image: ${{ steps.arguments.outputs.image }}
          config: ${{ steps.arguments.outputs.config }}

